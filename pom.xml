<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.lexus-rpc</groupId>
  <artifactId>lexus</artifactId>
  <version>1.0-SNAPSHOT</version>

  <packaging>pom</packaging>

  <name>lexus</name>
  <url>http://maven.apache.org</url>

  <properties>
      <netty.version>4.1.19.Final</netty.version>
      <hessian.version>4.0.38</hessian.version>
      <kryo.version>2.23.0</kryo.version>
      <protostuff.version>1.6.0</protostuff.version>
      <slf4j.version>1.7.5</slf4j.version>
      <junit.version>4.12</junit.version>
      <curator.version>2.9.1</curator.version>
      <zookeeper.version>3.4.14</zookeeper.version>
      <spring-framework.version>4.3.0.RELEASE</spring-framework.version>
      <commons-pool.version>1.6</commons-pool.version>
      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <modules>
        <module>lexus-common</module>
        <module>lexus-example</module>
        <module>lexus-serialization</module>
        <module>lexus-transport</module>
        <module>lexus-registry</module>
        <module>lexus-rpc</module>
      <module>lexus-spring-support</module>
  </modules>

  <dependencyManagement>
      <dependencies>
          <dependency>
              <groupId>junit</groupId>
              <artifactId>junit</artifactId>
              <version>${junit.version}</version>
              <scope>test</scope>
          </dependency>

          <!-- :) lexus module dependency start-->
          <dependency>
              <groupId>${project.groupId}</groupId>
              <artifactId>lexus-common</artifactId>
              <version>${project.version}</version>
          </dependency>
          <dependency>
              <groupId>${project.groupId}</groupId>
              <artifactId>lexus-example</artifactId>
              <version>${project.version}</version>
          </dependency>
          <dependency>
              <groupId>${project.groupId}</groupId>
              <artifactId>lexus-serialization</artifactId>
              <version>${project.version}</version>
          </dependency>
          <dependency>
              <groupId>${project.groupId}</groupId>
              <artifactId>lexus-transport</artifactId>
              <version>${project.version}</version>
          </dependency>
          <dependency>
              <groupId>${project.groupId}</groupId>
              <artifactId>lexus-registry</artifactId>
              <version>${project.version}</version>
          </dependency>
          <dependency>
              <groupId>${project.groupId}</groupId>
              <artifactId>lexus-rpc</artifactId>
              <version>${project.version}</version>
          </dependency>
          <!-- :) lexus module dependency end-->

          <!-- :) lexus serialization start-->
          <dependency>
              <groupId>io.netty</groupId>
              <artifactId>netty-all</artifactId>
              <version>${netty.version}</version>
          </dependency>
          <dependency>
              <groupId>com.caucho</groupId>
              <artifactId>hessian</artifactId>
              <version>${hessian.version}</version>
          </dependency>
          <dependency>
              <groupId>com.esotericsoftware.kryo</groupId>
              <artifactId>kryo</artifactId>
              <version>${kryo.version}</version>
          </dependency>
          <dependency>
              <groupId>io.protostuff</groupId>
              <artifactId>protostuff-core</artifactId>
              <version>${protostuff.version}</version>
          </dependency>
          <dependency>
              <groupId>io.protostuff</groupId>
              <artifactId>protostuff-runtime</artifactId>
              <version>${protostuff.version}</version>
          </dependency>
          <!-- :) lexus serialization end-->

          <dependency>
              <groupId>commons-pool</groupId>
              <artifactId>commons-pool</artifactId>
              <version>${commons-pool.version}</version>
          </dependency>
          <dependency>
              <!-- scope: provided  -->
              <groupId>org.slf4j</groupId>
              <artifactId>slf4j-api</artifactId>
              <version>${slf4j.version}</version>
          </dependency>

          <!-- :) zookeeper dependency start-->
          <dependency>
              <groupId>org.apache.zookeeper</groupId>
              <artifactId>zookeeper</artifactId>
              <version>${zookeeper.version}</version>
              <exclusions>
                  <exclusion>
                      <groupId>io.netty</groupId>
                      <artifactId>netty</artifactId>
                  </exclusion>
                  <exclusion>
                      <groupId>org.slf4j</groupId>
                      <artifactId>slf4j-api</artifactId>
                  </exclusion>
                  <exclusion>
                      <groupId>log4j</groupId>
                      <artifactId>log4j</artifactId>
                  </exclusion>
                  <exclusion>
                      <groupId>org.slf4j</groupId>
                      <artifactId>slf4j-log4j12</artifactId>
                  </exclusion>
                  <exclusion>
                      <groupId>jline</groupId>
                      <artifactId>jline</artifactId>
                  </exclusion>
              </exclusions>
          </dependency>
          <dependency>
              <groupId>org.apache.curator</groupId>
              <artifactId>curator-framework</artifactId>
              <version>${curator.version}</version>
              <exclusions>
                  <exclusion>
                      <groupId>org.slf4j</groupId>
                      <artifactId>slf4j-api</artifactId>
                  </exclusion>
              </exclusions>
          </dependency>
          <dependency>
              <groupId>org.apache.curator</groupId>
              <artifactId>curator-recipes</artifactId>
              <version>${curator.version}</version>
          </dependency>
          <!-- :) zookeeper dependency end-->

          <dependency>
              <groupId>org.springframework</groupId>
              <artifactId>spring-context</artifactId>
              <version>${spring-framework.version}</version>
          </dependency>

      </dependencies>
  </dependencyManagement>

  <build>
      <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.1</version>
            <configuration>
              <source>1.8</source>
              <target>1.8</target>
            </configuration>
          </plugin>
      </plugins>
  </build>

  <developers>
      <developer>
          <name>xingdong2015</name>
          <email>xingdong2015@gmail.com</email>
      </developer>
      <developer>
          <name>tkzandtkz</name>
          <email>tkzandtkz@gmail.com</email>
      </developer>
  </developers>
</project>
